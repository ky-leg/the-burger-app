{"version":3,"sources":["NavBar.js","styles/Box.js","styles/Button.js","styles/FormField.js","styles/Input.js","styles/Label.js","styles/Textarea.js","styles/Error.js","login/LoginForm.js","login/SignUpForm.js","login/Login.js","features/restaurants/restaurantsSlice.js","features/restaurants/RestaurantForm.js","features/restaurants/RestaurantFilterForm.js","features/restaurants/Restaurant.js","features/restaurants/Restaurants.js","features/restaurants/RestaurantList.js","features/dishes/dishesSlice.js","features/dishes/Dish.js","features/dishes/Dishes.js","features/dishes/RestaurantDishList.js","features/dishes/NestedDishForm.js","features/ratings/RatingForm.js","features/ratings/UpdateRatingForm.js","features/ratings/ratingsSlice.js","features/ratings/Rating.js","features/ratings/Ratings.js","features/ratings/RatingsFilter/RatingsFilterForm.js","features/ratings/AllRatingsList.js","features/ratings/RatingList.js","features/users/usersSlice.js","features/users/UserCard.js","features/ratings/UserRatingsList.js","features/ratings/DishRatingsList.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["a11yProps","index","id","styled","header","h1","nav","NavBar","user","onLogin","React","useState","value","setValue","Container","sx","borderBottom","borderColor","Box","width","Tabs","onChange","event","newValue","aria-label","Tab","component","Link","to","label","username","onClick","fetch","method","then","r","ok","mx","div","COLORS","primary","secondary","ButtonBase","button","FillButton","OutlineButton","Button","Component","variant","color","props","style","FormField","Input","input","Label","textarea","Wrapper","Alert","span","Message","p","Error","children","LoginForm","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","err","htmlFor","type","autoComplete","target","map","SignUpForm","passwordConfirmation","setPasswordConfirmation","firstName","setFirstName","location","setLocation","password_confirmation","first_name","section","Divider","hr","Login","showLogin","setShowLogin","fetchRestaurants","createAsyncThunk","a","response","restaurantsSlice","createSlice","name","initialState","entities","status","reducers","extraReducers","pending","state","console","log","fulfilled","action","payload","WrapperChild","NewRestaurant","setName","history","useNavigate","dispatch","useDispatch","RestaurantFilterForm","filter","handleChange","locations","useSelector","restaurants","mt","FormControl","m","minWidth","InputLabel","Select","labelId","i","MenuItem","Restaurant","restaurant","handleDeleteRestaurant","Card","CardHeader","title","IconButton","subheader","CardActions","Restaurants","handleDelete","Typography","RestaurantList","setFilter","maxWidth","Stack","spacing","fetchDishes","dishesSlice","Dish","dish","handleDeleteDish","params","useParams","subtitle","CardContent","ratings","length","Rating","precision","average","readOnly","size","restaurant_id","Dishes","dishes","RestaurantDishList","displayDishes","d","parseInt","restaurantName","find","restaurantNameSort","useEffect","NestedDishForm","dishName","setDishName","dishType","setDishType","dishVegan","setDishVegan","TextField","FormControlLabel","control","Checkbox","NewRating","userId","dishId","setDishId","restaurantId","setRestaurantId","score","setScore","setTitle","review","setReview","displayNestedForm","dishOrRest","dish_id","defaultValue","placeholder","multiline","resolveDishId","user_id","dish_type","vegan","ratings_attributes","UpdateRatingForm","ratingFinder","rating","rating_id","fetchRatings","ratingsSlice","displayUserButton","displayTitleOff","handleDeleteRating","setUser","error","setError","navigate","severity","Ratings","as","RatingsFilterForm","restaurantFilter","neighborhoodFilter","restaurantNames","setNeighborhoodFilter","setRestaurantFilter","AllRatingsList","allLocations","allRestaurants","Set","locationFilter","setLocationFilter","ratingId","RatingList","fetchUsers","usersSlice","UserCard","UserRatingsList","users","userPage","DishRatingsList","filteredDishFunction","dishRatings","App","exact","path","element","RestaurantForm","RatingForm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","restaurantsReducer","dishesReducer","ratingsReducer","usersReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c53f1f8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { Container } from \"@mui/system\";\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction NavBar({ user, onLogin }) {\n\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n  function handleLogoutClick() {\n    fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n      if (r.ok) {\n        onLogin(null);\n      }\n    });\n  }\n\n  return (\n    <Container sx={{ borderBottom: 1, borderColor: 'divider' }}>\n      <Box sx={{ width: '100%' }}>\n        <Box >\n          <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n            <Tab \n              component={Link}\n              to={`/user/${user.id}`}\n              label={user.username}\n              {...a11yProps(0)}\n              />\n            <Tab \n              component={Link}\n              to=\"/ratings/new\"\n              label=\"New Review\"\n              {...a11yProps(1)}>\n            </Tab>\n            <Tab \n              component={Link}\n              to=\"/restaurants\"\n              label=\"Restaurants\"\n              {...a11yProps(2)}>\n            </Tab>\n            <Tab \n              onClick={() => handleLogoutClick()}\n              label=\"Logout\"\n              {...a11yProps(3)}>\n            </Tab>\n            <Tab \n              sx={{mx: 'auto'}}\n              component={Link}\n              to=\"/\"\n              label=\"WKND EATR\">\n            </Tab>\n          </Tabs>\n        </Box>\n      </Box>\n  </Container>\n  );\n}\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px;\n`;\n\nconst Logo = styled.h1`\n  font-family: \"Permanent Marker\", cursive;\n  font-size: 3rem;\n  color: darkblue;\n  margin: 0;\n  line-height: 1;\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  gap: 4px;\n  position: absolute;\n  right: 8px;\n`;\n\nexport default NavBar;\n","import styled from \"styled-components\";\n\nconst Box = styled.div`\n  border-radius: 6px;\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%),\n    0 0 0 1px rgb(10 10 10 / 2%);\n  padding: 16px;\n`;\n\nexport default Box;\n","import styled from \"styled-components\";\n\nconst COLORS = {\n  primary: {\n    \"--main\": \"steelblue\",\n    \"--accent\": \"white\",\n  },\n  secondary: {\n    \"--main\": \"#a2add0\",\n    \"--accent\": \"white\",\n  },\n};\n\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\n  let Component;\n  if (variant === \"fill\") {\n    Component = FillButton;\n  } else if (variant === \"outline\") {\n    Component = OutlineButton;\n  }\n\n  return <Component style={COLORS[color]} {...props} />;\n}\n\nconst ButtonBase = styled.button`\n  cursor: pointer;\n  font-size: 1rem;\n  border: 1px solid transparent;\n  border-radius: 6px;\n  padding: 8px 16px;\n  text-decoration: none;\n`;\n\nconst FillButton = styled(ButtonBase)`\n  background-color: var(--main);\n  color: var(--accent);\n\n  &:hover {\n    opacity: 0.9;\n  }\n`;\n\nconst OutlineButton = styled(ButtonBase)`\n  background-color: white;\n  color: var(--main);\n  border: 2px solid var(--main);\n\n  &:hover {\n    background: hsl(235deg 85% 97%);\n  }\n`;\n\nexport default Button;\n","import styled from \"styled-components\";\n\nconst FormField = styled.div`\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport default FormField;\n","import styled from \"styled-components\";\n\nconst Input = styled.input`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nconst Label = styled.label`\n  color: #363636;\n  display: block;\n  font-size: 1rem;\n  font-weight: 700;\n  margin-bottom: 8px;\n`;\n\nexport default Label;\n","import styled from \"styled-components\";\n\nconst Textarea = styled.textarea`\n  border-radius: 6px;\n  border: 1px solid transparent;\n  border-color: #dbdbdb;\n  -webkit-appearance: none;\n  max-width: 100%;\n  width: 100%;\n  font-size: 1rem;\n  line-height: 1.5;\n  padding: 4px;\n  resize: none;\n`;\n\nexport default Textarea;\n","import styled from \"styled-components\";\n\nfunction Error({ children }) {\n  return (\n    <Wrapper>\n      <Alert>!</Alert>\n      <Message>{children}</Message>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  color: red;\n  background-color: mistyrose;\n  border-radius: 6px;\n  display: flex;\n  padding: 8px;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n`;\n\nconst Alert = styled.span`\n  background-color: white;\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  font-weight: bold;\n  display: grid;\n  place-content: center;\n`;\n\nconst Message = styled.p`\n  margin: 0;\n`;\n\nexport default Error;\n","import React, { useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\"\n// import { userLogin } from \"./usersSlice\"\nimport {  Error, Input, FormField, Label } from \"../styles\";\nimport Button from '@mui/material/Button'\n\nfunction LoginForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const dispatch = useDispatch();\n  \n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user))\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button variant=\"contained\"  type=\"submit\">\n          {isLoading ? \"Loading...\" : \"Login\"}\n        </Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\n\nfunction SignUpForm({ onLogin }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  // const [age, setAge] = useState(\"-\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setErrors([]);\n    setIsLoading(true);\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        password_confirmation: passwordConfirmation,\n        first_name: firstName,\n        location,\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then((user) => onLogin(user))\n        // .then(console.log(\"hey!\"))\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormField>\n        <Label htmlFor=\"username\">Username</Label>\n        <Input\n          type=\"text\"\n          id=\"username\"\n          autoComplete=\"off\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"password\">Password Confirmation</Label>\n        <Input\n          type=\"password\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"firstName\">First Name</Label>\n        <Input\n          type=\"text\"\n          id=\"firstName\"\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Label htmlFor=\"location\">Location</Label>\n        <Input\n          type=\"text\"\n          id=\"location\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n      </FormField>\n      <FormField>\n        <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\n      </FormField>\n      <FormField>\n        {errors.map((err) => (\n          <Error key={err}>{err}</Error>\n        ))}\n      </FormField>\n    </form>\n  );\n}\n\nexport default SignUpForm;\n","import { useState } from \"react\"; \nimport styled from \"styled-components\";\nimport LoginForm from \"./LoginForm\"\nimport SignUpForm from \"./SignUpForm\";\nimport Button from '@mui/material/Button'\n// import { Button } from \"../styles\";\n// import Container from '@mui/material/Container';\n// import Typography from '@mui/material/Typography';\n// import Box from '@mui/material/Box';\n// import Link from '@mui/material/Link';\n\n\nfunction Login({ onLogin }) {\n    const [showLogin, setShowLogin] = useState(true);\n      \n    return (\n      <Wrapper>\n        <h1>WKND EATER</h1>\n        {showLogin ? (\n          <>\n            <LoginForm onLogin={onLogin} />\n            <Divider />\n            <p>\n              Don't have an account? &nbsp;\n              <Button variant=\"contained\" onClick={() => setShowLogin(false)}>\n                Sign Up\n              </Button>\n            </p>\n          </>\n        ) : (\n          <>\n            <SignUpForm onLogin={onLogin} />\n            <Divider />\n            <p>\n              Already have an account? &nbsp;\n              <Button variant=\"contained\" onClick={() => setShowLogin(true)}>\n                Log In\n              </Button>\n            </p>\n          </>\n        )}\n      </Wrapper>\n    );\n  }\n\n  const Logo = styled.h1`\n  font-family: \"Permanent Marker\", cursive;\n  font-size: 3rem;\n  color: darkblue;\n  margin: 8px 0 16px;\n`;\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 40px auto;\n  padding: 16px;\n`;\n\nconst Divider = styled.hr`\n  border: none;\n  border-bottom: 1px solid #ccc;\n  margin: 16px 0;\n`;\n\nexport default Login;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRestaurants = createAsyncThunk(\"restaurants/fetchRestaurants\", async () =>{\n  const response = await fetch(\"/restaurants\");\n  return await response.json();\n})\n\nconst restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    entities: [],\n    status: \"idle\",\n  },\n  reducers: {\n \n  },\n  extraReducers: {\n    [fetchRestaurants.pending](state){\n      console.log('loading')\n      state.status = \"loading\";\n    },\n    [fetchRestaurants.fulfilled](state, action) {\n      console.log(\"fulfilled\")\n      state.entities = action.payload;\n      state.status = \"idle\";\n    },\n  },\n})\n\n// export const { } = restaurantsSlice.actions;\n\nexport default restaurantsSlice.reducer;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\nimport { Button, Error, FormField, Input, Label } from \"../../styles\";\nimport {  fetchRestaurants } from \"./restaurantsSlice\"\n\nfunction NewRestaurant() {\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useNavigate();\n  const dispatch = useDispatch()\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(\"/restaurants\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        location\n      }),\n    }).then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then(dispatch(fetchRestaurants()))\n        .then(history(`/restaurants`));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n  }\n\n\n  return (\n    <Wrapper>\n      <WrapperChild>\n        <h2>Create Restaurant</h2>\n        <form onSubmit={handleSubmit}>\n          <FormField>\n            <Label htmlFor=\"name\">Restaurant Name</Label>\n            <Input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Label htmlFor=\"location\">Restaurant Location</Label>\n            <Input\n              type=\"text\"\n              id=\"location\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n            />\n          </FormField>\n          <FormField>\n            <Button color=\"primary\" type=\"submit\">\n              {isLoading ? \"Loading...\" : \"Submit Restaurant\"}\n            </Button>\n          </FormField>\n          <FormField>\n            {errors.map((err) => (\n              <Error key={err}>{err}</Error>\n            ))}\n          </FormField>\n        </form>\n      </WrapperChild>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default NewRestaurant;\n","import {  Box, FormControl, MenuItem, InputLabel, Select } from \"@mui/material\"\nimport { useSelector } from \"react-redux\"\n\nexport default function RestaurantFilterForm({filter, handleChange}){\n    const restaurants = useSelector((state) => state.restaurants.entities)\n    const locations = restaurants.map((r) => r.location)\n\n    return (\n        <Box mt={2}>\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                <InputLabel id=\"select-restaurant-label\">Filter By Location</InputLabel>\n                <Select\n                labelId=\"select-neighborhood\"\n                id=\"filter\"\n                value={filter}\n                onChange={handleChange}\n                label=\"Neighborhood\"\n                >\n                    {locations ? (locations.map((location, i) => (\n                    <MenuItem key={i} value={location}>{location}</MenuItem>\n                    ))):\"\"}\n                </Select>\n            </FormControl>\n        </Box>\n    )\n}","import { Container, Stack, Card, CardHeader, CardActions, CardContent, Box, Typography, FormControl, MenuItem, InputLabel, Select, Button } from \"@mui/material\"\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport { BrowserRouter as Router,Link, useNavigate } from \"react-router-dom\";\n\n\nexport default function Restaurant({restaurant, handleDeleteRestaurant}) {\n    return (\n        <Card  key={restaurant.id} sx={{ minWidth: 345  }}>\n                <CardHeader\n                    title={restaurant.name}\n                    action ={\n                        <IconButton aria-label=\"settings\" onClick={e => handleDeleteRestaurant(restaurant.id)}>\n                            <DeleteIcon />\n                        </IconButton>\n                    }\n                    subheader={`Location: ${restaurant.location}`}\n                />            \n                <CardActions>\n                    <Button \n                        component={Link}\n                        to={`${restaurant.id}`}\n                        variant=\"standard\">\n                            Top Dishes\n                    </Button>\n                </CardActions>\n        </Card>\n    )\n}","import Restaurant from \"./Restaurant\"\nimport { Button, Typography } from '@mui/material'\nimport { BrowserRouter as Router,Link, useNavigate } from \"react-router-dom\";\n\nexport default function Restaurants({ restaurants, handleDelete }){\n    return (\n        <>\n        {restaurants ? (\n            restaurants.map((restaurant) => (\n            <Restaurant \n                key={restaurant.id} \n                restaurant={restaurant} \n                handleDelete={handleDelete}/>\n            ))\n        ) : (\n            <>\n            <Typography variant=\"h2\">No Restaurants Found</Typography>\n            <Button component = {Link} to=\"/restaurants\">\n                Back To Homepage\n            </Button>\n            </>\n        )}\n        </>\n    )\n}\n\n","import { useState } from \"react\"; \nimport styled from \"styled-components\";\n// import {  Box, Label } from \"../../styles\"; // eslint-disable-next-line\nimport { BrowserRouter as Router,Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchRestaurants } from \"./restaurantsSlice\"\nimport { Container, Stack, Card, CardHeader, CardActions, CardContent, Box, Typography, FormControl, MenuItem, InputLabel, Select, Button } from \"@mui/material\"\n\nimport RestaurantFilterForm from './RestaurantFilterForm';\nimport Restaurants from './Restaurants'\n\nfunction RestaurantList() {\n    const restaurants = useSelector((state) => state.restaurants.entities)\n    const [ filter, setFilter ] = useState(\"-\")\n    const locations = restaurants.map((r) => r.location)\n    const history = useNavigate()\n    const dispatch = useDispatch()\n    console.log(restaurants)\n    const filteredRestaurants = () => {\n        if (filter === \"-\")\n        {\n            return restaurants\n        }\n        else {\n            return restaurants.filter((restaurant) => (restaurant.location === filter))\n        }\n    }\n\n    function handleDeleteRestaurant(id){\n        fetch(`/restaurants/${id}`, {\n            method: 'DELETE',\n        })\n        .then(dispatch(fetchRestaurants()))\n        .then(history(`/restaurants`));\n    }\n\n    const handleChange = (event) => {\n        setFilter(event.target.value);\n      };\n\nreturn (\n    <Container maxWidth=\"sm\">\n        <Stack mt={2} spacing={3}>\n            <Typography variant=\"h4\">Top Restaurants</Typography>\n            <RestaurantFilterForm \n                filter={filter} \n                handleChange={handleChange}\n                />\n        <Stack mt={2} spacing={3}>\n            <Restaurants restaurants={filteredRestaurants()}/>\n        </Stack>\n            <Button variant=\"outlined\" component = {Link} to=\"/restaurants/new\">\n                Create New Restaurant\n            </Button>\n        </Stack>\n    </Container>\n)\n}\n\n\nexport default RestaurantList;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchDishes = createAsyncThunk(\"dishes/fetchDishes\", async () =>{\n  const response = await fetch(\"/dishes\");\n  return await response.json();\n})\n\nconst dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    entities: [],\n    status: \"idle\",\n  },\n  reducers: {\n \n  },\n  extraReducers: {\n    [fetchDishes.pending](state){\n      console.log('loading')\n      state.status = \"loading\";\n    },\n    [fetchDishes.fulfilled](state, action) {\n      console.log(\"fulfilled\")\n      state.entities = action.payload;\n      state.status = \"idle\";\n    },\n  },\n})\n\n// export const { } = dishesSlice.actions;\n\nexport default dishesSlice.reducer;\n","import { Container, Stack, Card, CardHeader, CardActions, CardContent, Box, Typography, FormControl, MenuItem, InputLabel, Select, Button, Rating } from \"@mui/material\"\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport { useDispatch } from \"react-redux\";\nimport { fetchDishes } from \"./dishesSlice\";\nimport { BrowserRouter as Router, Link, useParams } from \"react-router-dom\";\n\n\n\nexport default function Dish({dish, handleDeleteDish}){\n    const params = useParams()\n    const dispatch = useDispatch()\n\n    //handling dish delete\n    function handleDeleteDish(id){\n        fetch(`/dishes/${id}`, {\n            method: 'DELETE',\n        })\n        .then(dispatch(fetchDishes()))\n    }\n\n    return(\n        <Card key={dish.id} sx={{ minWidth: 345  }}>\n            <CardHeader\n            title={dish.name}\n            subtitle={params.id? \"\":`Restaurant: ${dish.restaurant.name}`}\n            action={\n            <IconButton aria-label=\"settings\" onClick={e => handleDeleteDish(dish.id)}>\n                <DeleteIcon />\n            </IconButton>\n            }\n            />\n            <CardContent>\n                <Typography variant=\"subtitle2\">{dish.ratings.length>0 ? `Avg. Rating:`: \"\"} </Typography>\n{dish.ratings ? <Rating name=\"half-rating-read\"  precision={0.1} value={dish.average} readOnly size=\"small\"/>:\"\"}\n                <Typography variant=\"subtitle2\">Total Ratings: {dish.ratings.length} </Typography>\n            </CardContent>\n            <CardActions>\n            <Button\n                component={Link}\n                to={`/ratings/${dish.id}`}\n                variant=\"outlined\"\n            >\n                Read Reviews    \n            </Button>\n            <Button\n                component={Link}\n                to={`/ratings/new/${dish.restaurant_id}/${dish.id}/`}\n                variant=\"outlined\"\n            >\n                Review This Dish\n            </Button>\n            </CardActions>\n        </Card>\n    )\n}","import { Container, Stack, Card, CardHeader, CardActions, CardContent, Box, Typography, FormControl, MenuItem, InputLabel, Select, Button, Rating } from \"@mui/material\"\nimport { BrowserRouter as Router, Link, useParams } from \"react-router-dom\";\nimport Dish from './Dish'\n\nexport default function Dishes({dishes, handleDeleteDish}){\n    return (\n        dishes ? (\n            dishes.map((dish) => (\n            <Dish dish={dish}\n                handleDeleteDish={handleDeleteDish}/>\n            ))\n        ) : (\n            <>\n            <h2>No Dishes Found</h2>\n            <Button \n                component={Link}\n                to=\"/ratings\"\n                variant=\"contained\"\n            >\n                Back To Homepage\n            </Button>\n            </>\n        )\n    )\n}\n","// eslint-disable-next-line\nimport { fetchDishes } from \"./dishesSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Container, Stack, Box, Typography, Button } from \"@mui/material\"\nimport { BrowserRouter as Router, Link, useParams } from \"react-router-dom\";\nimport Dishes from './Dishes'\n\nfunction RestaurantDishList(){\n    //redux setup \n    const dispatch = useDispatch();\n    const restaurants = useSelector((state) => state.restaurants.entities)\n    const dishes = useSelector((state) => state.dishes.entities)\n\n    //Sorting dishes\n    const params = useParams()\n    const dishSort = () => {\n        if (params.id && dishes.length>0) {\n            return dishes.filter(d => d.restaurant_id === parseInt(params.id))}\n        else {\n            return dishes}\n    }\n    const displayDishes = dishSort()\n\n    console.log(params.id)\n   \n    //Restaurant Name \n    const restaurantNameSort = (id=\"\") => {\n        if (restaurants.find(r=>r.id === parseInt(params.id)) && id===\"\"){\n            return (restaurants.find(r => (r.id === parseInt(params.id))).name)\n        }\n        else if (restaurants.find(r=>r.id===id)){\n            return (restaurants.find(r => (r.id === id)).name)\n        }\n    }\n    const restaurantName = restaurantNameSort()\n\n    useEffect(() => {\n        dispatch(fetchDishes())\n      }, [dispatch]);\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\">{restaurantName} Top Rated Dishes</Typography>\n            <Stack mt={2} spacing={3}>\n                <Dishes dishes={displayDishes}/>\n            </Stack>\n            <Box mt={2}>\n                <Button\n                    component={Link}\n                    to=\"/ratings/new\"\n                    variant=\"contained\"\n                >\n                    Create New Dish\n                </Button>\n            </Box>\n        </Container>\n    )\n}\n\nexport default RestaurantDishList;","import styled from \"styled-components\";\nimport { FormField, Input, Label } from \"../../styles\";\nimport { Stack, Checkbox, Container, Box, Typography, FormControl, FormControlLabel, MenuItem, InputLabel, Select, Button, TextField } from \"@mui/material\"\n\n\nfunction NestedDishForm({ dishName, setDishName, dishType, setDishType, dishVegan, setDishVegan}) {\n \n  return (\n    <Stack mt={2} spacing={3}>\n      <Typography variant=\"h5\">Add New Dish</Typography>\n      <FormControl >\n          <TextField id=\"dishName\" value={dishName} label=\"Dish Name\" variant=\"standard\" onChange={(e) => setDishName(e.target.value)}/>\n      </FormControl>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"select-dish-type-label\">Dish Type</InputLabel>\n        <Select \n          labelId=\"select-type\"\n          id=\"type\"\n          value={dishType}\n          onChange={(e) => setDishType(e.target.value)}\n          label=\"Restaurant\"\n          >\n            <MenuItem value='appetizer' key={'appetizer'}>Appetizer</MenuItem>\n            <MenuItem value='entree' key={'entree'}>Entree</MenuItem>\n            <MenuItem value='dessert' key={'dessert'}>Dessert</MenuItem>\n            <MenuItem value='drink' key={'drink'}>Drink</MenuItem>\n          </Select>\n      </FormControl>\n      <FormControl>\n        <FormControlLabel control={<Checkbox value={dishVegan} onChange={(e) => setDishVegan(e.target.value)} />} label=\"Spicy?\" />\n      </FormControl>\n    </Stack>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default NestedDishForm;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\nimport NestedDishForm from \"../dishes/NestedDishForm\";\nimport { Error } from \"../../styles\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchDishes } from \"../dishes/dishesSlice\"; // eslint-disable-next-line\nimport { BrowserRouter as Router, Link, useParams } from \"react-router-dom\";\nimport { Stack, Rating, Container, Box, Typography, FormControl, MenuItem, InputLabel, Select, Button, TextField } from \"@mui/material\"\n\n\n\nconst StyledRating = styled(Rating)({\n  '& .MuiRating-iconFilled': {\n    color: '#ff6d75',\n  },\n  '& .MuiRating-iconHover': {\n    color: '#ff3d47',\n  },\n});\n\nfunction NewRating({ userId }) {\n  //redux setup\n  const dispatch = useDispatch();\n  const restaurants = useSelector((state) => state.restaurants.entities)\n  const dishes = useSelector((state) => state.dishes.entities)  \n\n  //rating state\n  const [dishId, setDishId] = useState(\"\")\n  const [restaurantId, setRestaurantId] = useState(\"\")\n  const [score, setScore] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [review, setReview ] = useState(\"\")\n\n  //misc\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const history = useNavigate();\n  const params = useParams()\n  \n  //dish state & nested form\n  const [dishName, setDishName] = useState(\"\");\n  const [dishType, setDishType] = useState(\"\");\n  const [dishVegan, setDishVegan] = useState(false)\n\n  const displayNestedForm = () => {\n    if (dishId !== \"Make New Dish\"){\n      return true\n    }\n    else \n      return false \n  }\n\n  //handle submit \n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    //if there's the nested form, submit as to associate a nested form\n    if (!displayNestedForm()){\n      console.log(\"hit\")\n      fetch(\"/dishes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          restaurant_id: restaurantId, \n          name: dishName,\n          dish_type: dishType,\n          vegan: dishVegan,\n          ratings_attributes: [{\n            user_id: userId,\n            score: score,\n            title,\n            review,\n          }]\n        }),\n      })\n      .then((r) => {\n        setIsLoading(false);\n        if (r.ok) {\n          r.json().then(dispatch(fetchDishes()))\n          .then(history(`/restaurants/${restaurantId}`));\n        } else {\n          r.json().then((err) => console.log(err.errors));\n        }\n      });\n    }\n    //if there's no nested form \n    else {\n      const resolveDishId = () => {\n        if (params.restaurant_id && params.dish_id){\n          return params.dish_id\n        }\n        else {\n          return dishId\n        }\n      }\n      fetch(\"/ratings\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          dish_id: resolveDishId(),\n          user_id: userId,\n          score,\n          title,\n          review,\n        }),\n      })\n      .then((r) => {\n        setIsLoading(false);\n        if (r.ok) {\n          r.json().then(dispatch(fetchDishes()))\n          .then(history(`/ratings/${resolveDishId()}`));\n        } else {\n          r.json().then((err) => setErrors(err.errors));\n        }\n      });\n    }\n    \n  }\n\n  const dishInput = () => {\n    if (restaurantId === \"\"){\n      return (\n        <MenuItem key={'Pick a restaurant'}>Pick a Restaurant</MenuItem>\n      )\n    }\n    else {\n      const restaurant = restaurants.find((r) => (r.id === parseInt(restaurantId)))\n      const dish = restaurant.dishes.map((dish) => (<MenuItem value={dish.id} key={dish.id}>{dish.name}</MenuItem>))\n      return (dish)\n    }\n  }\n\n  const dishOrRest = () => {\n    if (restaurants.length>0 && dishes.length>0){\n    const restaurant = restaurants.find((r) => (r.id === parseInt(params.restaurant_id)))\n    const dish = dishes.find((d) => (d.id === parseInt(params.dish_id)))\n      return {\n        restaurant: restaurant.name, \n        dish: dish.name, \n      }\n    }   \n    else {\n      return {\n        restaurant: \"loading...\", \n        dish: \"loading...\", \n      }\n    }\n  }  \n\n  const handleIdChange = (event) => {\n    console.log(event.target.value)\n    setDishId(event.target.value);\n  };\n\nconsole.log(dishId, displayNestedForm())\n  return (\n    <Container maxWidth=\"sm\">\n      <Stack mt={2} spacing={3}>\n        <Typography variant=\"h4\">Write Review</Typography>\n            {/* conditionally rendering restaurant Name or a Form for Restaurant */}\n            {params.restaurant_id? \n            (\n              <Typography variant=\"subtitle1\">Restaurant {dishOrRest().restaurant}</Typography>\n            ):(\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel id=\"select-restaurant-label\">Restaurant</InputLabel>\n                <Select\n                labelId=\"select-restaurant\"\n                id=\"restaurant\"\n                value={restaurantId}\n                onChange={(e) => setRestaurantId(e.target.value)}\n                label=\"Restaurant\"\n                >\n                {restaurants.map((restaurant) => (<MenuItem value={restaurant.id} key={restaurant.id}>{restaurant.name}</MenuItem>))}\n                </Select>\n            </FormControl>\n          )}\n          {/* conditionally rendering restaurant Name or a Form for Restaurant */}\n          {params.dish_id?\n          (\n            <Typography variant=\"subtitle1\">Dish {dishOrRest().dish}</Typography>\n          ):\n          (\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel id=\"select-dish-label\">Dish</InputLabel>\n              <Select\n              labelId=\"select-dish\"\n              id=\"dish\"\n              value={dishId}\n              onChange={handleIdChange}\n              label=\"Dish\"\n              >\n                <MenuItem value='Make New Dish'>Make New Dish</MenuItem>\n                {dishInput()}\n              </Select>\n          </FormControl>\n          )}\n\n            \n          {displayNestedForm() ? \"\" : <NestedDishForm dishName={dishName} setDishName={setDishName} dishType={dishType} setDishType={setDishType} dishVegan={dishVegan} setDishVegan={setDishVegan}/>}\n          <Typography variant=\"h5\">Review</Typography>\n          <Stack mt={2} spacing={3}>\n            <FormControl>\n              <TextField id=\"title\" label=\"Title\" value={title} variant=\"standard\" onChange={(e) => setTitle(e.target.value)}/>\n            </FormControl>\n            <FormControl>\n              <Typography >Dish Score</Typography>\n              <Rating  label=\"Score\"name=\"half-rating\" defaultValue={2.5} precision={0.1} onChange={(e) => setScore(e.target.value)} value={score}/>\n            </FormControl>\n            <FormControl>\n                <TextField\n                    variant=\"standard\" \n                    id=\"outlined-textarea\"\n                    label=\"Review Body\"\n                    onChange={(e) => setReview(e.target.value)}\n                    placeholder=\"Write Your Review\"\n                    multiline\n                  />\n            </FormControl>\n            \n            <Button variant=\"outlined\" type=\"submit\" onClick={handleSubmit}>\n              {isLoading ? \"Loading...\" : \"Submit Review\"}\n            </Button>\n          </Stack>\n            {errors.map((err) => (\n              <Error key={err}>{err}</Error>\n            ))}\n      </Stack>\n      </Container>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default NewRating;\n","import { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport styled from \"styled-components\";\nimport NestedDishForm from \"../dishes/NestedDishForm\";\nimport { Error } from \"../../styles\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchDishes } from \"../dishes/dishesSlice\"; // eslint-disable-next-line\nimport { BrowserRouter as Router, Link, useParams } from \"react-router-dom\";\nimport { Stack, Rating, Container, Box, Typography, FormControl, MenuItem, InputLabel, Select, Button, TextField } from \"@mui/material\"\n\n\n\nconst StyledRating = styled(Rating)({\n  '& .MuiRating-iconFilled': {\n    color: '#ff6d75',\n  },\n  '& .MuiRating-iconHover': {\n    color: '#ff3d47',\n  },\n});\n\nfunction UpdateRatingForm({ userId }) {\n  \n  //redux setup\n  const dispatch = useDispatch();\n  const restaurants = useSelector((state) => state.restaurants.entities)\n  const dishes = useSelector((state) => state.dishes.entities)  \n  const ratings = useSelector((state) => state.ratings.entities)\n  console.log(ratings)\n  //accessing params to discern if we aer upadting an existing rating\n  const params = useParams()\n  function ratingFinder() {\n    return ratings.find(rating => parseInt(rating.id) === parseInt(params.rating_id))\n  }\n  const rating = ratingFinder()\n  console.log(ratingFinder(), params.rating_id)\n\n  //rating state\n  const [dishId, setDishId] = useState(rating.dish.id)\n  const [restaurantId, setRestaurantId] = useState(rating.restaurant.id)\n  const [score, setScore] = useState(rating.score);\n  const [title, setTitle] = useState(rating.title);\n  const [review, setReview ] = useState(rating.review)\n\n  //misc\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const history = useNavigate();\n \n\n  //handle submit CHANGE TO UPDATE\n  function handleSubmit(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    fetch(`/ratings/${params.rating_id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        dish_id: dishId,\n        user_id: userId,\n        score,\n        title,\n        review,\n      }),\n    })\n    .then((r) => {\n      setIsLoading(false);\n      if (r.ok) {\n        r.json().then(dispatch(fetchDishes()))\n        .then(history(`/ratings/${dishId}}`));\n      } else {\n        r.json().then((err) => setErrors(err.errors));\n      }\n    });\n    \n  }\n\n  const dishInput = () => {\n    if (restaurantId === \"\"){\n      return (\n        <MenuItem key={'Pick a restaurant'}>Pick a Restaurant</MenuItem>\n      )\n    }\n    else {\n      const restaurant = restaurants.find((r) => (r.id === parseInt(restaurantId)))\n      const dish = restaurant.dishes.map((dish) => (<MenuItem value={dish.id} key={dish.id}>{dish.name}</MenuItem>))\n      return (dish)\n    }\n  }\n\n  const handleIdChange = (event) => {\n    console.log(event.target.value)\n    setDishId(event.target.value);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Stack mt={2} spacing={3}>\n        <Typography variant=\"h4\">Write Review</Typography>\n          <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n            <InputLabel id=\"select-restaurant-label\">Restaurant</InputLabel>\n              <Select\n              labelId=\"select-restaurant\"\n              id=\"restaurant\"\n              value={restaurantId}\n              onChange={(e) => setRestaurantId(e.target.value)}\n              label=\"Restaurant\"\n              >\n              {restaurants.map((restaurant) => (<MenuItem value={restaurant.id} key={restaurant.id}>{restaurant.name}</MenuItem>))}\n              </Select>\n          </FormControl>\n          <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n            <InputLabel id=\"select-dish-label\">Dish</InputLabel>\n            <Select\n            labelId=\"select-dish\"\n            id=\"dish\"\n            value={dishId}\n            onChange={handleIdChange}\n            label=\"Dish\"\n            >\n              {dishInput()}\n            </Select>\n          </FormControl>\n          <Typography variant=\"h5\">Review</Typography>\n          <Stack mt={2} spacing={3}>\n            <FormControl>\n              <TextField id=\"title\" label=\"Title\" value={title} variant=\"standard\" onChange={(e) => setTitle(e.target.value)}/>\n            </FormControl>\n            <FormControl>\n              <Typography >Dish Score</Typography>\n              <Rating  label=\"Score\"name=\"half-rating\" defaultValue={2.5} precision={0.1} onChange={(e) => setScore(e.target.value)} value={score}/>\n            </FormControl>\n            <FormControl>\n                <TextField\n                    variant=\"standard\" \n                    id=\"outlined-textarea\"\n                    value={review}\n                    label=\"Review Body\"\n                    onChange={(e) => setReview(e.target.value)}\n                    placeholder=\"Write Your Review\"\n                    multiline\n                  />\n            </FormControl>\n            \n            <Button variant=\"outlined\" type=\"submit\" onClick={handleSubmit}>\n              {isLoading ? \"Loading...\" : \"Update Review\"}\n            </Button>\n          </Stack>\n            {errors.map((err) => (\n              <Error key={err}>{err}</Error>\n            ))}\n      </Stack>\n      </Container>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 1000px;\n  margin: 40px auto;\n  padding: 16px;\n  display: flex;\n  gap: 24px;\n`;\n\nconst WrapperChild = styled.div`\n  flex: 1;\n`;\n\nexport default UpdateRatingForm;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchRatings = createAsyncThunk(\"ratings/fetchRatings\", async () =>{\n  const response = await fetch(\"/ratings\");\n  return await response.json();\n})\n\nconst ratingsSlice = createSlice({\n  name: \"ratings\",\n  initialState: {\n    entities: [],\n    status: \"idle\",\n  },\n  reducers: {\n\n  },\n  extraReducers: {\n    [fetchRatings.pending](state){\n      console.log('loading')\n      state.status = \"loading\";\n    },\n    [fetchRatings.fulfilled](state, action) {\n      console.log(\"fulfilled\")\n      state.entities = action.payload;\n      state.status = \"idle\";\n    },\n  },\n})\n\n// export const {  } = ratingsSlice.actions;\n\nexport default ratingsSlice.reducer;\n","import { BrowserRouter as Router,Link, Route, useParams, useNavigate } from \"react-router-dom\";\nimport { Card, CardHeader, CardActions, CardContent, Typography, Button, Rating as RatingStyle } from \"@mui/material\"\nimport { useState, useEffect  } from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Alert from '@mui/material/Alert';\n\nfunction Rating({rating, displayUserButton, displayTitleOff, handleDeleteRating}) {\n    \n    const [user, setUser] = useState(null)\n    const [error, setError] = useState(\"\")\n    const navigate = useNavigate()\n    \n    useEffect(() => {\n        fetch(\"/me\").then((r) => {\n          if (r.ok) {\n            r.json().then((user) => setUser(user))\n          }\n        })\n      }, [])\n    \n\n    function onUpdateClick(){\n        if (parseInt(rating.user.id) === parseInt(user.id)){\n            console.log('this user should be able to edit')\n            //ROUTE TO REVIEW PAGE \"/ratings/update/:id\"\n            navigate(`/ratings/update/${rating.id}`)\n        }\n        else {\n            setError(<Alert severity=\"error\">You may only update one of your own reviews!</Alert>)  \n        }\n    }\n\n    function onDeleteClick(){\n        if (parseInt(rating.user.id) === parseInt(user.id)){\n            handleDeleteRating(rating.id, rating.dish.id)\n            \n        }\n        else {\n            setError(<Alert severity=\"error\">You may only delete one of your own reviews!</Alert>)  \n        }\n    }\n\n\n    return (\n        rating? (\n            <Card key={rating.id} sx={{ minWidth: 345  }}>\n            {!displayTitleOff?\n            (\n                <CardHeader\n                title={`${rating.dish.name} from ${rating.restaurant.name}`}\n                subtitle={`Location: ${rating.restaurant.location}`}\n                \n            />\n            ):\"\"}\n            <CardContent>\n                <Typography variant=\"h6\">{rating.title}</Typography>\n                <RatingStyle name=\"half-rating-read\"  \n                            precision={0.1} \n                            value={rating.score} \n                            readOnly size=\"small\"/>\n                <Typography>{rating.review}</Typography>\n            </CardContent>\n            <CardActions>\n                {displayUserButton? \n                    (\n                    <Button component={Link} \n                            to= {`/user/${rating.user.id}`} \n                            variant=\"outline\">\n                        {rating.user.username}\n                    </Button>\n                    ):\"\"\n                } \n                <IconButton onClick={onDeleteClick}>\n                        <DeleteIcon/>\n                </IconButton>\n                <IconButton onClick={onUpdateClick}>\n                        <EditIcon />\n                </IconButton>\n            </CardActions>\n        {error}\n        </Card>\n        \n        ):(<Typography variant=\"h5\">Loading...</Typography>)\n        \n    )\n}\n\nexport default Rating;\n\n// NOTES \n// expects a rating to be passed in, displayUserButton optional prop\n// Renders a <Card> with a \n// <CardHeader> (which includes dish, \n// restaurant name/location & has a <DeleteIcon> Button) \n// also has <CardContent> within <Card> \n// including rating title, rating score and reivew body\n// finally renders a <Button> which links to the user \n// on the condition that a userId is passed,  \n// ie when the view is not already on a user's rating page","import { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport { Box, Button } from \"@mui/material\";\nimport Rating from './Rating';\n\nfunction Ratings({ratings, displayUserButton, displayTitleOff, handleDeleteRating}) {\n    return (\n            (ratings) ? (\n                ratings.map((rating) => (\n                    <Rating rating={rating} \n                            displayUserButton={displayUserButton}\n                            displayTitleOff={displayTitleOff}\n                            handleDeleteRating={handleDeleteRating}\n                            />\n                ))\n            ) : (\n                <Box>\n                    <h2>No Ratings Found</h2>\n                    <Button as = {Link} to=\"/\">\n                        Back To Homepage\n                    </Button>\n                </Box>\n            )\n    )\n}\n\nexport default Ratings;\n\n// NOTES \n// <Ratings> expects ratings to be passed in, \n// checks if there are more than 0 ratings\n// then maps over ratings, \n// returning a <Rating> compnent and passing it \n// the rating for each. \n// \n// if there 0 ratings in the ratings passed in, \n// a button is rendered to return to home page","\nimport { Container,  FormControl, MenuItem, InputLabel, Select } from \"@mui/material\"\n\nfunction RatingsFilterForm({restaurantFilter, neighborhoodFilter, locations, restaurantNames, setNeighborhoodFilter, setRestaurantFilter}) {\n\n    return (\n        <Container>\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                <InputLabel id=\"select-neighborhood-label\">Filter By Neighborhood</InputLabel>\n                    <Select\n                    labelId=\"select-neighborhood\"\n                    id=\"neighborhoodFilter\"\n                    value={neighborhoodFilter}\n                    onChange={(e) => setNeighborhoodFilter(e.target.value)}\n                    label=\"Neighborhood\"\n                    >\n                        {locations.length>0? \n                        locations.map((location, i) => (<MenuItem value={location} key={i}>{location}</MenuItem>)): \"\"\n                        }\n                    </Select>\n            </FormControl>\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>      \n            <InputLabel id=\"select-restaurant-label\">Filter By Restaurant</InputLabel>\n            <Select\n            labelId=\"select-restaurant\"\n            id=\"restaurantFilter\"\n            value={restaurantFilter}\n            onChange={(e) => setRestaurantFilter(e.target.value)}\n            label=\"Restaurant\"\n            >\n                {locations.length>0? \n                restaurantNames.map((restaurantName, i) => (<MenuItem value={restaurantName} key={i}>{restaurantName}</MenuItem>)):\"\"}\n            </Select>\n        </FormControl>\n    </Container> \n    )\n}\n\nexport default RatingsFilterForm;","import { useState, useEffect } from \"react\"; \nimport { BrowserRouter as Router,Link, Route, useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Stack, Typography, Button } from \"@mui/material\"\nimport { fetchRatings } from \"../ratings/ratingsSlice\";\nimport Ratings from './Ratings'\nimport RatingsFilterForm from './RatingsFilter/RatingsFilterForm'\n\nfunction AllRatingsList({user}) {\n    const dispatch = useDispatch(); \n    const history = useNavigate(); \n\n\n    //redux stores \n    const restaurants = useSelector((state) => state.restaurants.entities)\n    const ratings = useSelector((state) => state.ratings.entities)\n\n    //filter state setup \n    const allLocations = restaurants.map((r) => r.location)\n    const allRestaurants = restaurants.map((r) => r.name)\n    const locations = [\"-\", ...new Set(allLocations)] // can eventually be refactored\n    const restaurantNames = [\"-\", ...new Set(allRestaurants)] // can eventually be refactored\n    const [ restaurantFilter, setRestaurantFilter ] = useState(\"-\")\n    const [ locationFilter, setLocationFilter ] = useState(\"-\")\n\n    // console.log(locations)\n    //calls our function to filter out ratings\n    // setFilteredRatings(FilteredRatingsFunction)\n\n    function filteredRatingsFunction() {\n        if (locationFilter === \"-\" && restaurantFilter === \"-\")\n            {\n                return ratings\n            }\n            else if  (locationFilter !== \"-\" && restaurantFilter === \"-\"){\n                return ratings.filter((rating => (rating.restaurant.location === locationFilter)))\n            }\n            else if (restaurantFilter !== \"-\" && locationFilter === \"-\"){\n                return ratings.filter((rating => (rating.restaurant.name === restaurantFilter)))\n            }\n            else {\n                return (ratings.filter((rating => (rating.restaurant.name === restaurantFilter)))\n                .filter((rating => (rating.restaurant.location === locationFilter))))\n            }\n    }\n\n    console.log('reloaded page')\n\n    function handleDeleteRating(ratingId, dishId){\n        fetch(`/ratings/${ratingId}`, {\n            method: \"DELETE\",\n          })\n          .then(() => {\n            dispatch(fetchRatings())\n            .then(history(`/`))\n            \n          });\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\">Latest Ratings</Typography>\n            <Stack mt={2} spacing={3}>\n                <RatingsFilterForm \n                    neighborhoodFilter={locationFilter} \n                    restaurantFilter={restaurantFilter} \n                    locations={locations} \n                    \n                    restaurantNames={restaurantNames}\n                    setRestaurantFilter={setRestaurantFilter}\n                    setNeighborhoodFilter={setLocationFilter}\n                />\n            {ratings ? (\n                <Ratings ratings={filteredRatingsFunction()} displayUserButton={true} handleDeleteRating={handleDeleteRating}/>\n            ) : (\n                <>\n                <h2>No Ratings Found</h2>\n                <Button as = {Link} to=\"/\">\n                    Back To Homepage\n                </Button>\n                </>\n            )}\n                <Button component={Link} to=\"/ratings/new\" variant=\"outlined\">\n                    Create New Rating\n                </Button>       \n            </Stack>\n        </Container>\n    )\n}\n\nexport default AllRatingsList;\n\n// NOTES \n// a container for restaurants and its filters\n// pulls ratings and restaurants from Redux \n// uses useState hook to initialize various variables which will be passed \n// to serve the filter function. \n// then renders a container with a name and stack containing \n// <RatingsFilterForm>, and then checks if the filteredRatings() is longer\n// than 0, if so it passes them into the <Ratings> component, if not \n// it returns a button to return home. \n// finally there is a button at the bottom which takes the user to \n// the new rating page. \n\n// UNUSED Function  \n\n// HANDLES DELETING RATING, NOT IN USE, takes in id \n// function handleDeleteRating(id){\n//     fetch(`/ratings/${id}`, {\n//         method: 'DELETE',\n//     })\n//     // .then(() => {\n//     //     const newRatings = ratings.filter(rating => (rating.id !== id))\n//     //     setRatings(newRatings)\n//     // })\n// }","import { useState, useEffect } from \"react\"; \nimport styled from \"styled-components\";\nimport {  Form, FormField, Label } from \"../../styles\";\nimport { BrowserRouter as Router,Link, Route, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Stack, Card, CardHeader, CardActions, CardContent, Box, Typography, FormControl, MenuItem, InputLabel, Select, Button, Rating } from \"@mui/material\"\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\n\n \n\nfunction RatingList({user}) {\n    //redux stores \n    const restaurants = useSelector((state) => state.restaurants.entities)\n    const ratings = useSelector((state) => state.ratings.entities)\n    const users = useSelector((state) => state.users.entities)\n\n    console.log(users)\n    //filter\n    const allLocations = restaurants.map((r) => r.location)\n    const allRestaurants = restaurants.map((r) => r.name)\n    const locations = [\"-\", ...new Set(allLocations)]\n    const restaurantNames = [\"-\", ...new Set(allRestaurants)]\n    const [ restaurantFilter, setRestaurantFilter ] = useState(\"-\")\n    const [ neighborhoodFilter, setNeighborhoodFilter ] = useState(\"-\")\n\n    const filteredRatings = () => {\n        if (neighborhoodFilter === \"-\" && restaurantFilter === \"-\")\n        {\n            return ratings\n        }\n        else if  (neighborhoodFilter !== \"-\" && restaurantFilter === \"-\"){\n            return ratings.filter((rating => (rating.restaurant.location === neighborhoodFilter)))\n        }\n        else if (neighborhoodFilter !== \"-\" && restaurantFilter !== \"-\"){\n            return ratings.filter((rating => (rating.restaurant.name === restaurantFilter)))\n        }\n    }\n\n    //filter switch\n    const params = useParams()\n    const filterSwitch = () => {\n        if (!params.id){\n            return {\n                upper: (\n                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n                        <InputLabel id=\"select-neighborhood-label\">Filter By Neighborhood</InputLabel>\n                            <Select\n                            labelId=\"select-neighborhood\"\n                            id=\"neighborhoodFilter\"\n                            value={neighborhoodFilter}\n                            onChange={(e) => setNeighborhoodFilter(e.target.value)}\n                            label=\"Neighborhood\"\n                            >\n                                {locations.map((location, i) => (<MenuItem value={i} key={i}>{location}</MenuItem>))}\n                            </Select>\n                        </FormControl>\n                    \n                ),\n                lower: (\n                    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>      \n                        <InputLabel id=\"select-restaurant-label\">Filter By Restaurant</InputLabel>\n                        <Select\n                        labelId=\"select-restaurant\"\n                        id=\"restaurantFilter\"\n                        value={restaurantFilter}\n                        onChange={(e) => setRestaurantFilter(e.target.value)}\n                        label=\"Restaurant\"\n                        >\n                            {restaurantNames.map((name, i) => (<MenuItem value={i} key={i}>{name}</MenuItem>))}\n                        </Select>\n                    </FormControl>),\n                title: \"Latest\",\n                ratings: filteredRatings(),\n            }\n        }\n        else \n        // if (params.id === parseInt(user.id))\n        {\n            const thisUser = users.find(user => user.id === parseInt(params.id))\n            return {\n                upper: (\n                    <Stack>\n                        <Typography variant=\"body\">User: {thisUser.username}</Typography>\n                        <Typography variant=\"body\">Name: {thisUser.first_name}</Typography>\n                        <Typography variant=\"body\">Location: {thisUser.location}</Typography>\n                    </Stack>\n                ),\n                lower: \"\",\n                title: thisUser.first_name+\"'s\",\n                ratings: filteredRatings().filter(rating => rating.user_id === parseInt(thisUser.id)),\n            }\n        }\n        // else {\n        //     return {\n        //         filter: \"loading\",\n        //         title: \"loading\",\n        //     }\n        // }\n    }\n\n\n    function handleDeleteRating(id){\n        fetch(`/ratings/${id}`, {\n            method: 'DELETE',\n        })\n        // .then(() => {\n        //     const newRatings = ratings.filter(rating => (rating.id !== id))\n        //     setRatings(newRatings)\n        // })\n    }\n\n\n    return (\n        <Container maxWidth=\"sm\">\n            \n            <Typography variant=\"h4\">{filterSwitch().title} Ratings</Typography>\n            <Stack mt={2} spacing={3}>\n            {filterSwitch().upper}\n            {filterSwitch().lower}\n            {ratings.length > 0 ? (\n                filterSwitch().ratings.map((rating) => (\n                        <Card key={rating.id} sx={{ minWidth: 345  }}>\n                            <CardHeader\n                                title={`${rating.dish.name} from ${rating.restaurant.name}`}\n                                subtitle={`Location: ${rating.restaurant.location}`}\n                                action={\n                                    <IconButton>\n                                        <DeleteIcon/>\n                                    </IconButton>\n                                }\n                            />\n                            <CardContent>\n                                <Typography variant=\"h6\">{rating.title}</Typography>\n                                <Rating name=\"half-rating-read\"  precision={0.1} value={rating.score} readOnly size=\"small\"/>\n                                <Typography>{rating.review}</Typography>\n                            </CardContent>\n                            <CardActions>\n                                {!params.id? \n                                    (\n                                    <Button component={Link} to={`/user/${rating.user.id}`} variant=\"outline\">\n                                        {rating.user.username}\n                                    </Button>\n                                    ):\"\"\n                                } \n                            </CardActions>\n                        </Card>\n\n                ))\n            ) : (\n                <>\n                <h2>No Ratings Found</h2>\n                <Button as = {Link} to=\"/\">\n                    Back To Homepage\n                </Button>\n                </>\n            )}\n                <Button component={Link} to=\"/ratings/new\" variant=\"outlined\">\n                    Create New Rating\n                </Button>\n            \n            </Stack>\n        </Container>\n    )\n}\n\nexport default RatingList;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () =>{\n  const response = await fetch(\"/users\");\n  return await response.json();\n})\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    entities: [],\n    status: \"idle\",\n  },\n  reducers: {\n\n  },\n  extraReducers: {\n    [fetchUsers.pending](state){\n      console.log('loading')\n      state.status = \"loading\";\n    },\n    [fetchUsers.fulfilled](state, action) {\n      console.log(\"fulfilled\")\n      state.entities = action.payload;\n      state.status = \"idle\";\n    },\n  },\n})\n\n// export const {  } = usersSlice.actions;\n\nexport default usersSlice.reducer;\n","import { Typography } from \"@mui/material\"\n\n\nexport default function UserCard({user}) {\n    return (\n            <Typography variant=\"h5\">{user.first_name}, {user.location}</Typography>\n    )\n}","import { useState, useEffect } from \"react\"; \nimport { BrowserRouter as Router,Link, Route, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Container, Stack, Typography, Button } from \"@mui/material\"\nimport Ratings from './Ratings'\nimport RatingsFilterForm from './RatingsFilter/RatingsFilterForm'\nimport UserCard from \"../users/UserCard\";\n\nfunction UserRatingsList({user}) {\n    //redux stores \n    const restaurants = useSelector((state) => state.restaurants.entities)\n    const ratings = useSelector((state) => state.ratings.entities)\n    const users = useSelector((state) => state.users.entities)\n\n    const params = useParams()\n\n    const userPage = users.find(user => user.id == params.id )\n\n    function filteredRatingsFunction() {\n        return userPage.ratings\n    }\n\n    console.log(userPage)\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\">{userPage.username}</Typography>\n            <Stack mt={2} spacing={3}>\n                {userPage? (\n                <UserCard user={userPage}/>\n                ):\"\"}\n            {ratings ? (\n                <Ratings ratings={filteredRatingsFunction()}/>\n            ) : (\n                <>\n                <h2>No Ratings Found</h2>\n                <Button as = {Link} to=\"/\">\n                    Back To Homepage\n                </Button>\n                </>\n            )}\n                <Button component={Link} to=\"/ratings/new\" variant=\"outlined\">\n                    Create New Rating\n                </Button>       \n            </Stack>\n        </Container>\n    )\n}\n\nexport default UserRatingsList;\n\n// NOTES \n// a container for restaurants and its filters\n// pulls ratings and restaurants from Redux \n// uses useState hook to initialize various variables which will be passed \n// to serve the filter function. \n// then renders a container with a name and stack containing \n// <RatingsFilterForm>, and then checks if the filteredRatings() is longer\n// than 0, if so it passes them into the <Ratings> component, if not \n// it returns a button to return home. \n// finally there is a button at the bottom which takes the user to \n// the new rating page. \n\n// UNUSED Function  \n\n// HANDLES DELETING RATING, NOT IN USE, takes in id \n// function handleDeleteRating(id){\n//     fetch(`/ratings/${id}`, {\n//         method: 'DELETE',\n//     })\n//     // .then(() => {\n//     //     const newRatings = ratings.filter(rating => (rating.id !== id))\n//     //     setRatings(newRatings)\n//     // })\n// }","import { useState, useEffect } from \"react\"; \nimport { useNavigate } from \"react-router\";\nimport { fetchRatings } from \"../ratings/ratingsSlice\";\nimport { BrowserRouter as Router,Link, Route, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Stack, Typography, Button } from \"@mui/material\"\nimport Ratings from './Ratings'\nimport RatingsFilterForm from './RatingsFilter/RatingsFilterForm'\n\nfunction DishRatingsList() {\n    const dispatch = useDispatch(); \n    const history = useNavigate(); \n    //redux stores \n    const restaurants = useSelector((state) => state.restaurants.entities)\n    const ratings = useSelector((state) => state.ratings.entities)\n    const dishes = useSelector((state) => state.dishes.entities)\n\n    const params = useParams() \n    console.log(dishes, params.dish_id)\n\n    function filteredDishFunction() {\n        return dishes.find(dish => parseInt(dish.id) === parseInt(params.dish_id))\n    }\n\n    const dish = filteredDishFunction()\n\n    function filteredRestaurantFunction(){\n        return restaurants.find(restaurant => parseInt(dish.restaurant_id) === parseInt(restaurant.id))\n    }\n\n    const restaurant = filteredRestaurantFunction()\n    const dishRatings = filteredDishFunction().ratings\n\n    function handleDeleteRating(ratingId, dishId){\n        fetch(`/ratings/${ratingId}`, {\n            method: \"DELETE\",\n          })\n          .then(() => {\n            dispatch(fetchRatings())\n            .then(history(`/`))\n            \n          });\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography variant=\"h4\">Ratings for {dish.name} from {restaurant.name}</Typography>\n            <Stack mt={2} spacing={3}>\n            {ratings ? (\n                <Ratings ratings={dishRatings} displayUserButton={true} displayTitleOff={true} handleDeleteRating={handleDeleteRating}/>\n            ) : (\n                <>\n                <h2>No Ratings Found</h2>\n                <Button as = {Link} to=\"/\">\n                    Back To Homepage\n                </Button>\n                </>\n            )}\n            {params.dish_id? \n            (\n            <Button component={Link} to={`/ratings/new/${dish.restaurant_id}/${dish.id}/`} variant=\"outlined\">\n            Rate This Dish\n            </Button> \n            ):(\n            <Button component={Link} to=\"/ratings/new\" variant=\"outlined\">\n                Create New Rating\n            </Button> \n            )}\n            </Stack>\n        </Container>\n    )\n}\n\nexport default DishRatingsList;\n\n// NOTES \n// a container for restaurants and its filters\n// pulls ratings and restaurants from Redux \n// uses useState hook to initialize various variables which will be passed \n// to serve the filter function. \n// then renders a container with a name and stack containing \n// <RatingsFilterForm>, and then checks if the filteredRatings() is longer\n// than 0, if so it passes them into the <Ratings> component, if not \n// it returns a button to return home. \n// finally there is a button at the bottom which takes the user to \n// the new rating page. \n\n// UNUSED Function  \n\n// HANDLES DELETING RATING, NOT IN USE, takes in id \n// function handleDeleteRating(id){\n//     fetch(`/ratings/${id}`, {\n//         method: 'DELETE',\n//     })\n//     // .then(() => {\n//     //     const newRatings = ratings.filter(rating => (rating.id !== id))\n//     //     setRatings(newRatings)\n//     // })\n// }","// import logo from './logo.svg';\nimport NavBar from './NavBar';\nimport Login from \"./login/Login\"\nimport RestaurantForm from \"./features/restaurants/RestaurantForm\"\nimport RestaurantList from './features/restaurants/RestaurantList'\nimport RestaurantDishList from './features/dishes/RestaurantDishList'\nimport RatingForm from './features/ratings/RatingForm';\nimport UpdateRatingForm from './features/ratings/UpdateRatingForm'\nimport AllRatingsList from './features/ratings/AllRatingsList';\nimport './App.css';\nimport { useState, useEffect  } from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchRestaurants } from './features/restaurants/restaurantsSlice';\nimport { fetchDishes } from './features/dishes/dishesSlice'\nimport { fetchRatings } from './features/ratings/ratingsSlice';\nimport RatingList from './features/ratings/RatingList';\nimport { fetchUsers } from './features/users/usersSlice';\nimport UserRatingsList from './features/ratings/UserRatingsList'\nimport DishRatingsList from './features/ratings/DishRatingsList';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n// import DishListAll from './features/dishes/DishListAll';\n\n\nfunction App() {\n  const [user, setUser] = useState(null)\n \n  //redux setup \n  const dispatch = useDispatch();\n\n  //FETCHING\n  //me\n  useEffect(() => {\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user))\n      }\n    })\n  }, [])\n\n  //rest\n  useEffect(() => {\n    dispatch(fetchRestaurants())\n  }, [dispatch]);\n\n  //dish\n  useEffect(() => {\n    dispatch(fetchDishes())\n  }, [dispatch]);\n  \n  //rating\n  useEffect(() => {\n    dispatch(fetchRatings())\n  }, [dispatch]);\n\n  //user\n  useEffect(() => {\n    dispatch(fetchUsers())\n  }, [dispatch]);\n  \n  const ratings = useSelector(state => state.ratings.entities)\n  console.log(ratings)\n\n  if (!user) return <Login user={user} onLogin={setUser}/>\n\n  return (\n    <>\n      <NavBar user={user} onLogin={setUser}/>\n      <main>\n        <Routes exact path=\"/\">\n            <Route path=\"/\" \n              element={<AllRatingsList user={user}/>}\n            />\n            <Route path=\"/user/:id\" \n              element={<UserRatingsList user={user}/>}\n            />\n            <Route path=\"/restaurants/new\" \n              element={<RestaurantForm/>}\n            />\n            <Route \n              path=\"/restaurants\" \n              element={<RestaurantList/>}\n            />\n            <Route \n              path=\"/dishes\" \n              element={<RestaurantDishList />}/>\n            <Route \n              path={`/restaurants/:id`}\n              element={<RestaurantDishList />}/>\n            <Route \n              path=\"/ratings/new\" \n              element={<RatingForm userId={user.id}/>}\n            />\n            <Route \n              path=\"/ratings/new/:restaurant_id/:dish_id/\" \n              element={<RatingForm userId={user.id} />}\n            />\n            <Route \n              path=\"/ratings/:dish_id/\" \n              element={<DishRatingsList userId={user.id} />}\n            />\n            <Route \n              path=\"/ratings/update/:rating_id\" \n              element={<UpdateRatingForm userId={user.id} />}\n            />\n        </Routes>\n      </main>\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\n// import usersReducer from \"./login/usersSlice\";\nimport restaurantsReducer from \"./features/restaurants/restaurantsSlice\";\nimport dishesReducer from \"./features/dishes/dishesSlice\"\nimport ratingsReducer from \"./features/ratings/ratingsSlice\"\nimport usersReducer from \"./features/users/usersSlice\"\n\nconst store = configureStore({\n  reducer: {\n    restaurants: restaurantsReducer,\n    dishes: dishesReducer,\n    ratings: ratingsReducer,\n    users: usersReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}